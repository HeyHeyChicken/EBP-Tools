// Copyright (c) 2025, Antoine Duval
// This file is part of a source-visible project.
// See LICENSE for terms. Unauthorized use is prohibited.

@use '../../imports/variables' as variables;
@use '../../imports/material_colors' as material_colors;

mat-form-field {
  width: 100%;

  &.mat-form-field-disabled {
    opacity: 0.5;
  }

  > .mat-mdc-text-field-wrapper {
    $border-size: 1px;
    border-radius: 0;
    background-color: variables.$dark_color !important;
    border: $border-size solid variables.$border_color;
    padding: 0 variables.$margin;
    height: variables.$form_height;
    overflow: visible;
    position: relative;

    > .mat-mdc-form-field-focus-overlay {
      display: none;
    }

    > .mat-mdc-form-field-flex {
      height: calc(#{variables.$form_height} - #{$border-size} * 2);

      > .mat-mdc-form-field-infix {
        min-height: calc(#{variables.$form_height} - #{$border-size} * 2);
        padding: 0;

        &:has(label) {
          > input {
            &::placeholder {
              opacity: 0;
            }
          }
        }

        > .buttons {
          display: flex;
          position: absolute;
          top: 0;
          right: 0;

          > button {
            min-height: calc(#{variables.$form_height} - 2px);
            min-width: calc(#{variables.$form_height} - 2px);
            border-width: 0 0 0 1px;
            padding: 0;
            background-color: transparent;
            transform: translateX(variables.$margin);
            cursor: pointer;
            color: material_colors.$white;
            background-color: variables.$dark_color;

            &:before,
            &:after {
              content: none;
            }

            > i {
              margin-right: 0;
            }
          }
        }

        > input {
          padding: 0;
          color: material_colors.$white;
          font-size: variables.$font_size;
          min-height: calc(#{variables.$form_height} - #{$border-size} * 2);
          line-height: calc(#{variables.$form_height} - #{$border-size} * 2);
          -webkit-appearance: none;

          &[type='number'] {
            -moz-appearance: textfield; // Firefox
          }

          &::placeholder {
            opacity: 0.5;
            color: white;
          }
        }

        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
          -webkit-appearance: none;
        }

        > label {
          top: 50%;
          color: material_colors.$white !important;
          font-size: variables.$margin;
          transition: none;
          background-color: variables.$dark_color;

          &.mdc-floating-label--float-above {
            top: calc(#{$border-size} * -1);
            left: calc(#{variables.$margin} * -1 - #{$border-size});
            transform: translateY(-50%);
            border-style: solid;
            border-width: $border-size $border-size 0 $border-size;
            border-color: variables.$border_color;
            padding: calc(#{variables.$margin} / 3) variables.$margin 0
              variables.$margin;
            overflow: visible;

            &:after {
              content: '';
              position: absolute;
              height: 9px;
              width: 4px;
              background-color: variables.$dark_color;
              bottom: 0;
              right: calc(0px - 2px);
            }
          }
        }
      }
    }

    > [matformfieldlineripple] {
      display: none;
    }
  }

  > .mat-mdc-form-field-subscript-wrapper {
    display: none;
  }

  &.mat-focused {
    > .mat-mdc-text-field-wrapper {
      padding: 0 calc(#{variables.$margin} - 1px);
      $border-size: 2px;
      border-width: $border-size;
      border-color: variables.$main_color;

      > .mat-mdc-form-field-flex {
        > .mat-mdc-form-field-infix {
          > .buttons {
            > button {
              height: calc(#{variables.$form_height} - 4px);
              top: -1px;
              border-width: 0 1px 0 2px;
              border-color: transparent transparent transparent
                variables.$main_color;
            }
          }

          > input {
            min-height: calc(#{variables.$form_height} - #{$border-size} * 2);
            line-height: calc(#{variables.$form_height} - #{$border-size} * 2);
            caret-color: variables.$main_color;

            &::placeholder {
              opacity: 0.5;
            }
          }

          > label {
            color: variables.$main_color !important;
            border-style: solid;
            border-width: $border-size $border-size 0px $border-size;
            border-color: variables.$main_color;
            top: calc(#{$border-size} * -1);
            left: calc((#{variables.$margin} + 1px) * -1);
            transform: translateY(-50%);
            padding: calc(#{variables.$margin} / 3 - 1px)
              calc(#{variables.$margin} - 1px) 0
              calc(#{variables.$margin} - 1px);
            overflow: visible;

            &:after {
              content: '';
              position: absolute;
              height: 8px;
              width: 4px;
              background-color: variables.$dark_color;
              bottom: 0;
              right: calc(0px - 2px);
            }
          }
        }
      }
    }
  }

  &.orange {
    &.mat-focused {
      > .mat-mdc-text-field-wrapper {
        border-color: variables.$orange_color;

        > .mat-mdc-form-field-flex {
          > .mat-mdc-form-field-infix {
            > .buttons {
              > button {
                border-color: transparent transparent transparent
                  variables.$orange_color;
              }
            }

            > input {
              caret-color: variables.$orange_color;
            }

            > label {
              color: variables.$orange_color !important;
              border-color: variables.$orange_color;
            }
          }
        }
      }
    }
  }

  &.blue {
    &.mat-focused {
      > .mat-mdc-text-field-wrapper {
        border-color: variables.$blue_color;

        > .mat-mdc-form-field-flex {
          > .mat-mdc-form-field-infix {
            > .buttons {
              > button {
                border-color: transparent transparent transparent
                  variables.$blue_color;
              }
            }

            > input {
              caret-color: variables.$blue_color;
            }

            > label {
              color: variables.$blue_color !important;
              border-color: variables.$blue_color;
            }
          }
        }
      }
    }
  }
}

label {
  margin: 0;
  position: relative;
  display: block;

  > span {
    display: block;
    padding: calc(#{variables.$margin} / 3) variables.$margin 0
      variables.$margin;
    color: #fff;
    width: fit-content;
    font-size: variables.$margin;
    line-height: variables.$margin;
    position: absolute;
    top: 0;
    left: 0;
    transform: translateY(-50%);
    border-style: solid;
    border-color: variables.$border_color;
    border-width: 1px 0 0 1px;

    &:before,
    &:after {
      content: '';
      position: absolute;
      top: 0;
    }

    &:before {
      left: 0;
      height: 100%;
      width: 100%;
      background-color: variables.$dark_color;
      z-index: -1;
    }

    &:after {
      right: 0;
      height: calc(#{variables.$margin} / 4 * 3);
      width: 1px;
      background-color: #6c757d;
    }
  }

  &:has(> input:focus) {
    > span {
      border-color: variables.$main_color;
      border-width: 2px 0 0 2px;
      padding: calc(#{variables.$margin} / 3) calc(#{variables.$margin} - 1px) 0
        calc(#{variables.$margin} - 1px);
      color: variables.$main_color;

      &:after {
        background-color: variables.$main_color;
        width: 2px;
      }
    }

    > input {
      border-width: 2px;
      padding: 0 calc(#{variables.$margin} - 1px);
    }
  }

  &.two {
    display: flex !important;

    > span {
      height: variables.$form_height;
      line-height: calc(#{variables.$form_height} - 2px);
      border-style: solid;
      border-color: variables.$border_color;
      border-width: 1px 0 1px 1px;
      display: block;
      width: fit-content;
      padding: 0 variables.$margin;
    }

    > input {
      flex: 1;
    }
  }
}

/*
select,
.multiselect-dropdown {
	width: 100% !important;
	border-radius: 0 !important;
	border: 1px solid variables.$border_color !important;
	padding: 0 variables.$margin !important;
	height: variables.$form_height;
	line-height: variables.$form_height;
	color: white;
	outline: none;
	-webkit-appearance: none;
	background-color: variables.$dark_color;
	cursor: pointer;

	&.readonly {
		pointer-events: none;
	}

	> optgroup,
	> option {
		color: white;
	}
}
*/

textarea {
  background-color: variables.$dark_color;
  color: white;
  display: block;
  border: 1px solid variables.$border_color;
  width: 100%;
  box-sizing: border-box;
  resize: vertical;
  padding: 0 variables.$margin;
  min-height: calc(#{variables.$margin} * 8);

  &:focus {
    outline: none;
  }

  &:not(:read-only) {
    &:focus {
      border-color: variables.$main_color;
    }
  }
}

input {
  &[type='date'],
  &[type='time'],
  &[type='datetime-local'] {
    cursor: pointer;

    &::-webkit-calendar-picker-indicator {
      filter: invert(100%);
    }
  }

  &[type='text'],
  &[type='url'],
  &[type='email'],
  &[type='number'],
  &[type='date'],
  &[type='time'],
  &[type='datetime-local'] {
    height: variables.$form_height;
    line-height: calc(#{variables.$form_height} - 2px);
    background-color: variables.$dark_color;
    border: 1px solid variables.$border_color;
    color: white;
    padding: 0 variables.$margin;
    box-sizing: border-box;
    border-radius: 0;
    width: 100%;

    &:focus {
      outline: none;
    }

    &:not(.readonly) {
      &:focus {
        border-color: variables.$main_color;
      }
    }
  }

  &[type='checkbox'] {
    outline: none;
    border: 1px solid variables.$border_color;
    background-color: transparent;
    position: relative;
    margin-right: variables.$margin;
    transform: translateY(3px);
    border-radius: 0;

    &:not(.readonly) {
      cursor: pointer;

      &:focus {
        border-color: variables.$main_color;
      }
    }

    &:after {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(45deg);
    }

    &:checked {
      border-color: variables.$main_color;
      background-color: variables.$main_color;
    }

    &:focus {
      outline: none;
    }
  }
}

label:has(
    input[type='text']:not(.readonly):focus,
    input[type='url']:not(.readonly):focus,
    input[type='email']:not(.readonly):focus,
    input[type='number']:not(.readonly):focus,
    input[type='date']:not(.readonly):focus,
    input[type='time']:not(.readonly):focus
  ) {
  color: variables.$main_color;
}
