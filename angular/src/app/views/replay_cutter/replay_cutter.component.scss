// Copyright (c) 2025, Antoine Duval
// This file is part of a source-visible project.
// See LICENSE for terms. Unauthorized use is prohibited.

@use '../../../styles/imports/variables' as variables;

video:not(.visible) {
  pointer-events: none;
  width: 1920px;
}

.p-relative {
  position: relative;

  > .buttons {
    position: absolute;
    bottom: 0;
    left: calc(100% + #{variables.$margin});
    display: flex;
    padding: variables.$margin variables.$margin 0 variables.$margin;
    transform: translateX(-50%);
    z-index: 1;
    background-image: url('/assets/img/border.png');
    background-size: 100% 100%;
  }
}

.dropper {
  border-style: dashed;
  border-color: variables.$border_color;
  padding: calc(#{variables.$margin} * 2);
  text-align: center;
  position: relative;
  height: 100%;
  box-sizing: border-box;

  &:before,
  &:after {
    content: '';
    position: absolute;
    background-color: variables.$dark_color;
    left: 0;
    top: 0;
    z-index: 0;
    transition: all 0.2s ease-in-out;
    box-sizing: border-box;
  }

  &:before {
    height: 100%;
    width: calc(100% - #{variables.$margin} * 1.5);
    border-bottom: 1px dashed variables.$border_color;
  }

  &:after {
    width: 100%;
    height: calc(100% - #{variables.$form_height} - #{variables.$margin});
  }

  &:not(.right) {
    border-width: 1px 0 0 1px;

    &:after {
      border-right: 1px dashed variables.$border_color;
    }
  }

  &.right {
    border-width: 1px 1px 0 0;

    &:before {
      right: 0;
      left: initial;
    }

    &:after {
      border-left: 1px dashed variables.$border_color;
    }
  }

  &:not(.disabled) {
    cursor: pointer;
  }

  &.disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  &:hover {
    &:before,
    &:after {
      background-color: #251e1b;
    }

    > .icon {
      @keyframes iconWiggle {
        0% {
          transform: translate(-50%, -50%) rotate(0deg);
        }
        25% {
          transform: translate(-50%, -50%) rotate(-15deg);
        }
        75% {
          transform: translate(-50%, -50%) rotate(15deg);
        }
        100% {
          transform: translate(-50%, -50%) rotate(0deg);
        }
      }

      > i {
        animation-name: iconWiggle;
        animation-duration: 0.5s;
      }
    }
  }

  > .icon {
    $size: 40px;
    position: relative;
    height: $size;
    width: $size;
    margin: 0 auto 12px auto;
    z-index: 1;

    > i {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: calc(#{variables.$margin} * 3);
    }
  }

  > p {
    z-index: 1;
    position: relative;
    margin: 0;
    color: variables.$main_color;
    max-width: calc(100% - #{variables.$margin} * 2);
    margin: 0 auto;
  }
}

.box {
  background-color: variables.$dark_color;
  padding: calc(#{variables.$margin} / 2);
  border: 1px solid variables.$border_color;
  width: fit-content;
  gap: calc(#{variables.$margin} / 2);
  display: flex;
  margin: 0 auto;
}

table {
  background-color: variables.$dark_color;
  color: white;
  border-collapse: collapse;
  width: 100%;

  > thead,
  > tbody {
    > tr {
      th:has(> .checkbox) {
        padding: 0;
        min-width: 48px;

        .checkbox {
          position: relative;
          height: variables.$form_height;
          width: variables.$form_height;
          margin: 0 auto;

          > mat-checkbox {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
          }
        }
      }

      > * {
        padding: calc(#{variables.$margin} / 2) variables.$margin;
        border: 1px solid variables.$border_color;
      }
    }
  }

  > thead {
    > tr {
      > th {
        padding: calc(#{variables.$margin} / 2);

        > div {
          display: flex;
          gap: calc(#{variables.$margin} / 2);
        }
      }
    }
  }

  > tbody > tr {
    > th {
      background-position: center center;
      background-size: cover;
      text-align: center;
      font-weight: 700;
      text-transform: uppercase;
    }

    > td {
      &.infos {
        width: 100%;

        .orange {
          color: variables.$orange_color;
        }
        .blue {
          color: variables.$blue_color;
        }

        span {
          cursor: pointer;

          &:hover {
            text-decoration: underline;
          }
        }
      }

      &.buttons {
        padding: calc(#{variables.$margin} / 2);

        > div {
          display: flex;
          gap: calc(#{variables.$margin} / 2);
        }
      }

      > p {
        margin: 0;
      }
    }
  }
}

#debug {
  position: fixed;
  top: 0;
  left: 0;
  background-color: variables.$dark_color;
  height: 100vh;
  width: 100vw;
  z-index: 999;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  overflow-x: auto;

  &.invisible {
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: -1000000vh;
    left: -1000000vw;
  }

  > .buttons {
    position: fixed;
    top: variables.$margin;
    right: calc(#{variables.$margin} * 2);
    z-index: 1;
    gap: variables.$margin;
    display: flex;
  }

  > .video {
    position: relative;
    overflow: hidden;
    padding-top: 56.25%;
    width: 100%;

    video {
      transform: translate(-50%, -50%) scale(0.41);
      position: absolute;
      top: 50%;
      left: 50%;
    }
  }

  ::ng-deep canvas {
    max-width: 100%;
  }
}

#debugButton {
  position: absolute;
  left: variables.$margin;
  bottom: 50%;
  transform: translateY(+50%);
}
